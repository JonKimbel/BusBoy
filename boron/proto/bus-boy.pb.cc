// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bus-boy.proto

#include "bus-boy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_bus_2dboy_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bus_2dboy_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Arrival;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bus_2dboy_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DisplayedTime;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bus_2dboy_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Route;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bus_2dboy_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TimeFrame;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bus_2dboy_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TemporaryMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bus_2dboy_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TemporaryStyle;
}  // namespace protobuf_bus_2dboy_2eproto
namespace busboy {
namespace api {
class ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response>
      _instance;
} _Response_default_instance_;
class DisplayedTimeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DisplayedTime>
      _instance;
} _DisplayedTime_default_instance_;
class ArrivalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Arrival>
      _instance;
} _Arrival_default_instance_;
class RouteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Route>
      _instance;
} _Route_default_instance_;
class TemporaryMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TemporaryMessage>
      _instance;
} _TemporaryMessage_default_instance_;
class TemporaryStyleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TemporaryStyle>
      _instance;
} _TemporaryStyle_default_instance_;
class TimeFrameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimeFrame>
      _instance;
} _TimeFrame_default_instance_;
}  // namespace api
}  // namespace busboy
namespace protobuf_bus_2dboy_2eproto {
static void InitDefaultsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::busboy::api::_Response_default_instance_;
    new (ptr) ::busboy::api::Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::busboy::api::Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsResponse}, {
      &protobuf_bus_2dboy_2eproto::scc_info_DisplayedTime.base,
      &protobuf_bus_2dboy_2eproto::scc_info_Arrival.base,
      &protobuf_bus_2dboy_2eproto::scc_info_Route.base,
      &protobuf_bus_2dboy_2eproto::scc_info_TemporaryMessage.base,
      &protobuf_bus_2dboy_2eproto::scc_info_TemporaryStyle.base,}};

static void InitDefaultsDisplayedTime() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::busboy::api::_DisplayedTime_default_instance_;
    new (ptr) ::busboy::api::DisplayedTime();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::busboy::api::DisplayedTime::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DisplayedTime =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDisplayedTime}, {}};

static void InitDefaultsArrival() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::busboy::api::_Arrival_default_instance_;
    new (ptr) ::busboy::api::Arrival();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::busboy::api::Arrival::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Arrival =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsArrival}, {}};

static void InitDefaultsRoute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::busboy::api::_Route_default_instance_;
    new (ptr) ::busboy::api::Route();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::busboy::api::Route::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Route =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRoute}, {}};

static void InitDefaultsTemporaryMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::busboy::api::_TemporaryMessage_default_instance_;
    new (ptr) ::busboy::api::TemporaryMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::busboy::api::TemporaryMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TemporaryMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTemporaryMessage}, {
      &protobuf_bus_2dboy_2eproto::scc_info_TimeFrame.base,}};

static void InitDefaultsTemporaryStyle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::busboy::api::_TemporaryStyle_default_instance_;
    new (ptr) ::busboy::api::TemporaryStyle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::busboy::api::TemporaryStyle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TemporaryStyle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTemporaryStyle}, {
      &protobuf_bus_2dboy_2eproto::scc_info_TimeFrame.base,}};

static void InitDefaultsTimeFrame() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::busboy::api::_TimeFrame_default_instance_;
    new (ptr) ::busboy::api::TimeFrame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::busboy::api::TimeFrame::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TimeFrame =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTimeFrame}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DisplayedTime.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Arrival.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Route.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TemporaryMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TemporaryStyle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TimeFrame.base);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::Response, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::Response, arrivals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::Response, routes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::Response, temporary_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::Response, temporary_style_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::DisplayedTime, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::DisplayedTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::DisplayedTime, ms_since_epoch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::DisplayedTime, daylight_savings_time_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::Arrival, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::Arrival, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::Arrival, route_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::Arrival, ms_to_arrival_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::Arrival, predicted_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::Route, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::Route, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::Route, short_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::Route, headsign_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::TemporaryMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::TemporaryMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::TemporaryMessage, time_frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::TemporaryMessage, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::TemporaryMessage, color_scheme_override_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::TemporaryStyle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::TemporaryStyle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::TemporaryStyle, time_frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::TemporaryStyle, color_scheme_override_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::TimeFrame, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::TimeFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::TimeFrame, start_time_ms_since_epoch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::busboy::api::TimeFrame, end_time_ms_since_epoch_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::busboy::api::Response)},
  { 15, 22, sizeof(::busboy::api::DisplayedTime)},
  { 24, 32, sizeof(::busboy::api::Arrival)},
  { 35, 42, sizeof(::busboy::api::Route)},
  { 44, 52, sizeof(::busboy::api::TemporaryMessage)},
  { 55, 62, sizeof(::busboy::api::TemporaryStyle)},
  { 64, 71, sizeof(::busboy::api::TimeFrame)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::busboy::api::_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::busboy::api::_DisplayedTime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::busboy::api::_Arrival_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::busboy::api::_Route_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::busboy::api::_TemporaryMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::busboy::api::_TemporaryStyle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::busboy::api::_TimeFrame_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "bus-boy.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rbus-boy.proto\022\nbusboy.api\"\353\001\n\010Response"
      "\022\'\n\004time\030\001 \001(\0132\031.busboy.api.DisplayedTim"
      "e\022%\n\010arrivals\030\002 \003(\0132\023.busboy.api.Arrival"
      "\022!\n\006routes\030\003 \003(\0132\021.busboy.api.Route\0227\n\021t"
      "emporary_message\030\004 \003(\0132\034.busboy.api.Temp"
      "oraryMessage\0223\n\017temporary_style\030\005 \003(\0132\032."
      "busboy.api.TemporaryStyle\"F\n\rDisplayedTi"
      "me\022\026\n\016ms_since_epoch\030\001 \001(\004\022\035\n\025daylight_s"
      "avings_time\030\002 \001(\010\"H\n\007Arrival\022\023\n\013route_in"
      "dex\030\001 \001(\r\022\025\n\rms_to_arrival\030\002 \001(\r\022\021\n\tpred"
      "icted\030\003 \001(\010\"-\n\005Route\022\022\n\nshort_name\030\001 \001(\t"
      "\022\020\n\010headsign\030\002 \001(\t\"\206\001\n\020TemporaryMessage\022"
      ")\n\ntime_frame\030\001 \001(\0132\025.busboy.api.TimeFra"
      "me\022\017\n\007message\030\002 \003(\t\0226\n\025color_scheme_over"
      "ride\030\003 \001(\0162\027.busboy.api.ColorScheme\"s\n\016T"
      "emporaryStyle\022)\n\ntime_frame\030\001 \001(\0132\025.busb"
      "oy.api.TimeFrame\0226\n\025color_scheme_overrid"
      "e\030\002 \001(\0162\027.busboy.api.ColorScheme\"O\n\tTime"
      "Frame\022!\n\031start_time_ms_since_epoch\030\001 \001(\004"
      "\022\037\n\027end_time_ms_since_epoch\030\002 \001(\004*V\n\013Col"
      "orScheme\022\014\n\010SEAHAWKS\020\000\022\013\n\007RAINBOW\020\001\022\n\n\006S"
      "PRING\020\002\022\n\n\006SUMMER\020\003\022\010\n\004FALL\020\004\022\n\n\006WINTER\020"
      "\005B#\n!com.jonkimbel.busboybackend.proto"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 918);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bus-boy.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_bus_2dboy_2eproto
namespace busboy {
namespace api {
const ::google::protobuf::EnumDescriptor* ColorScheme_descriptor() {
  protobuf_bus_2dboy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bus_2dboy_2eproto::file_level_enum_descriptors[0];
}
bool ColorScheme_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Response::InitAsDefaultInstance() {
  ::busboy::api::_Response_default_instance_._instance.get_mutable()->time_ = const_cast< ::busboy::api::DisplayedTime*>(
      ::busboy::api::DisplayedTime::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kTimeFieldNumber;
const int Response::kArrivalsFieldNumber;
const int Response::kRoutesFieldNumber;
const int Response::kTemporaryMessageFieldNumber;
const int Response::kTemporaryStyleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bus_2dboy_2eproto::scc_info_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:busboy.api.Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      arrivals_(from.arrivals_),
      routes_(from.routes_),
      temporary_message_(from.temporary_message_),
      temporary_style_(from.temporary_style_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_time()) {
    time_ = new ::busboy::api::DisplayedTime(*from.time_);
  } else {
    time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:busboy.api.Response)
}

void Response::SharedCtor() {
  time_ = NULL;
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:busboy.api.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  if (this != internal_default_instance()) delete time_;
}

void Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  ::protobuf_bus_2dboy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bus_2dboy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response& Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bus_2dboy_2eproto::scc_info_Response.base);
  return *internal_default_instance();
}


void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:busboy.api.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arrivals_.Clear();
  routes_.Clear();
  temporary_message_.Clear();
  temporary_style_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(time_ != NULL);
    time_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:busboy.api.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .busboy.api.DisplayedTime time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .busboy.api.Arrival arrivals = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arrivals()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .busboy.api.Route routes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_routes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .busboy.api.TemporaryMessage temporary_message = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_temporary_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .busboy.api.TemporaryStyle temporary_style = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_temporary_style()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:busboy.api.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:busboy.api.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:busboy.api.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .busboy.api.DisplayedTime time = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_time(), output);
  }

  // repeated .busboy.api.Arrival arrivals = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arrivals_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->arrivals(static_cast<int>(i)),
      output);
  }

  // repeated .busboy.api.Route routes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->routes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->routes(static_cast<int>(i)),
      output);
  }

  // repeated .busboy.api.TemporaryMessage temporary_message = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->temporary_message_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->temporary_message(static_cast<int>(i)),
      output);
  }

  // repeated .busboy.api.TemporaryStyle temporary_style = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->temporary_style_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->temporary_style(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:busboy.api.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:busboy.api.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .busboy.api.DisplayedTime time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_time(), deterministic, target);
  }

  // repeated .busboy.api.Arrival arrivals = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arrivals_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->arrivals(static_cast<int>(i)), deterministic, target);
  }

  // repeated .busboy.api.Route routes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->routes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->routes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .busboy.api.TemporaryMessage temporary_message = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->temporary_message_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->temporary_message(static_cast<int>(i)), deterministic, target);
  }

  // repeated .busboy.api.TemporaryStyle temporary_style = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->temporary_style_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->temporary_style(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:busboy.api.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:busboy.api.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .busboy.api.Arrival arrivals = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->arrivals_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arrivals(static_cast<int>(i)));
    }
  }

  // repeated .busboy.api.Route routes = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->routes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->routes(static_cast<int>(i)));
    }
  }

  // repeated .busboy.api.TemporaryMessage temporary_message = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->temporary_message_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->temporary_message(static_cast<int>(i)));
    }
  }

  // repeated .busboy.api.TemporaryStyle temporary_style = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->temporary_style_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->temporary_style(static_cast<int>(i)));
    }
  }

  // optional .busboy.api.DisplayedTime time = 1;
  if (has_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:busboy.api.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:busboy.api.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:busboy.api.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:busboy.api.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arrivals_.MergeFrom(from.arrivals_);
  routes_.MergeFrom(from.routes_);
  temporary_message_.MergeFrom(from.temporary_message_);
  temporary_style_.MergeFrom(from.temporary_style_);
  if (from.has_time()) {
    mutable_time()->::busboy::api::DisplayedTime::MergeFrom(from.time());
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:busboy.api.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:busboy.api.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  CastToBase(&arrivals_)->InternalSwap(CastToBase(&other->arrivals_));
  CastToBase(&routes_)->InternalSwap(CastToBase(&other->routes_));
  CastToBase(&temporary_message_)->InternalSwap(CastToBase(&other->temporary_message_));
  CastToBase(&temporary_style_)->InternalSwap(CastToBase(&other->temporary_style_));
  swap(time_, other->time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_bus_2dboy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bus_2dboy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DisplayedTime::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisplayedTime::kMsSinceEpochFieldNumber;
const int DisplayedTime::kDaylightSavingsTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisplayedTime::DisplayedTime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bus_2dboy_2eproto::scc_info_DisplayedTime.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:busboy.api.DisplayedTime)
}
DisplayedTime::DisplayedTime(const DisplayedTime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ms_since_epoch_, &from.ms_since_epoch_,
    static_cast<size_t>(reinterpret_cast<char*>(&daylight_savings_time_) -
    reinterpret_cast<char*>(&ms_since_epoch_)) + sizeof(daylight_savings_time_));
  // @@protoc_insertion_point(copy_constructor:busboy.api.DisplayedTime)
}

void DisplayedTime::SharedCtor() {
  ::memset(&ms_since_epoch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&daylight_savings_time_) -
      reinterpret_cast<char*>(&ms_since_epoch_)) + sizeof(daylight_savings_time_));
}

DisplayedTime::~DisplayedTime() {
  // @@protoc_insertion_point(destructor:busboy.api.DisplayedTime)
  SharedDtor();
}

void DisplayedTime::SharedDtor() {
}

void DisplayedTime::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DisplayedTime::descriptor() {
  ::protobuf_bus_2dboy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bus_2dboy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DisplayedTime& DisplayedTime::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bus_2dboy_2eproto::scc_info_DisplayedTime.base);
  return *internal_default_instance();
}


void DisplayedTime::Clear() {
// @@protoc_insertion_point(message_clear_start:busboy.api.DisplayedTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&ms_since_epoch_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&daylight_savings_time_) -
        reinterpret_cast<char*>(&ms_since_epoch_)) + sizeof(daylight_savings_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DisplayedTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:busboy.api.DisplayedTime)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 ms_since_epoch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ms_since_epoch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ms_since_epoch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool daylight_savings_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_daylight_savings_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &daylight_savings_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:busboy.api.DisplayedTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:busboy.api.DisplayedTime)
  return false;
#undef DO_
}

void DisplayedTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:busboy.api.DisplayedTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 ms_since_epoch = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ms_since_epoch(), output);
  }

  // optional bool daylight_savings_time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->daylight_savings_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:busboy.api.DisplayedTime)
}

::google::protobuf::uint8* DisplayedTime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:busboy.api.DisplayedTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 ms_since_epoch = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ms_since_epoch(), target);
  }

  // optional bool daylight_savings_time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->daylight_savings_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:busboy.api.DisplayedTime)
  return target;
}

size_t DisplayedTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:busboy.api.DisplayedTime)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 ms_since_epoch = 1;
    if (has_ms_since_epoch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ms_since_epoch());
    }

    // optional bool daylight_savings_time = 2;
    if (has_daylight_savings_time()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisplayedTime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:busboy.api.DisplayedTime)
  GOOGLE_DCHECK_NE(&from, this);
  const DisplayedTime* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DisplayedTime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:busboy.api.DisplayedTime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:busboy.api.DisplayedTime)
    MergeFrom(*source);
  }
}

void DisplayedTime::MergeFrom(const DisplayedTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:busboy.api.DisplayedTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      ms_since_epoch_ = from.ms_since_epoch_;
    }
    if (cached_has_bits & 0x00000002u) {
      daylight_savings_time_ = from.daylight_savings_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DisplayedTime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:busboy.api.DisplayedTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisplayedTime::CopyFrom(const DisplayedTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:busboy.api.DisplayedTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisplayedTime::IsInitialized() const {
  return true;
}

void DisplayedTime::Swap(DisplayedTime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisplayedTime::InternalSwap(DisplayedTime* other) {
  using std::swap;
  swap(ms_since_epoch_, other->ms_since_epoch_);
  swap(daylight_savings_time_, other->daylight_savings_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DisplayedTime::GetMetadata() const {
  protobuf_bus_2dboy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bus_2dboy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Arrival::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Arrival::kRouteIndexFieldNumber;
const int Arrival::kMsToArrivalFieldNumber;
const int Arrival::kPredictedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Arrival::Arrival()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bus_2dboy_2eproto::scc_info_Arrival.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:busboy.api.Arrival)
}
Arrival::Arrival(const Arrival& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&route_index_, &from.route_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&predicted_) -
    reinterpret_cast<char*>(&route_index_)) + sizeof(predicted_));
  // @@protoc_insertion_point(copy_constructor:busboy.api.Arrival)
}

void Arrival::SharedCtor() {
  ::memset(&route_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&predicted_) -
      reinterpret_cast<char*>(&route_index_)) + sizeof(predicted_));
}

Arrival::~Arrival() {
  // @@protoc_insertion_point(destructor:busboy.api.Arrival)
  SharedDtor();
}

void Arrival::SharedDtor() {
}

void Arrival::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Arrival::descriptor() {
  ::protobuf_bus_2dboy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bus_2dboy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Arrival& Arrival::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bus_2dboy_2eproto::scc_info_Arrival.base);
  return *internal_default_instance();
}


void Arrival::Clear() {
// @@protoc_insertion_point(message_clear_start:busboy.api.Arrival)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&route_index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&predicted_) -
        reinterpret_cast<char*>(&route_index_)) + sizeof(predicted_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Arrival::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:busboy.api.Arrival)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 route_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_route_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &route_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ms_to_arrival = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ms_to_arrival();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ms_to_arrival_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool predicted = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_predicted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &predicted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:busboy.api.Arrival)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:busboy.api.Arrival)
  return false;
#undef DO_
}

void Arrival::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:busboy.api.Arrival)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 route_index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->route_index(), output);
  }

  // optional uint32 ms_to_arrival = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ms_to_arrival(), output);
  }

  // optional bool predicted = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->predicted(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:busboy.api.Arrival)
}

::google::protobuf::uint8* Arrival::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:busboy.api.Arrival)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 route_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->route_index(), target);
  }

  // optional uint32 ms_to_arrival = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ms_to_arrival(), target);
  }

  // optional bool predicted = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->predicted(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:busboy.api.Arrival)
  return target;
}

size_t Arrival::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:busboy.api.Arrival)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 route_index = 1;
    if (has_route_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->route_index());
    }

    // optional uint32 ms_to_arrival = 2;
    if (has_ms_to_arrival()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ms_to_arrival());
    }

    // optional bool predicted = 3;
    if (has_predicted()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Arrival::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:busboy.api.Arrival)
  GOOGLE_DCHECK_NE(&from, this);
  const Arrival* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Arrival>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:busboy.api.Arrival)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:busboy.api.Arrival)
    MergeFrom(*source);
  }
}

void Arrival::MergeFrom(const Arrival& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:busboy.api.Arrival)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      route_index_ = from.route_index_;
    }
    if (cached_has_bits & 0x00000002u) {
      ms_to_arrival_ = from.ms_to_arrival_;
    }
    if (cached_has_bits & 0x00000004u) {
      predicted_ = from.predicted_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Arrival::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:busboy.api.Arrival)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Arrival::CopyFrom(const Arrival& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:busboy.api.Arrival)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Arrival::IsInitialized() const {
  return true;
}

void Arrival::Swap(Arrival* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Arrival::InternalSwap(Arrival* other) {
  using std::swap;
  swap(route_index_, other->route_index_);
  swap(ms_to_arrival_, other->ms_to_arrival_);
  swap(predicted_, other->predicted_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Arrival::GetMetadata() const {
  protobuf_bus_2dboy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bus_2dboy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Route::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Route::kShortNameFieldNumber;
const int Route::kHeadsignFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Route::Route()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bus_2dboy_2eproto::scc_info_Route.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:busboy.api.Route)
}
Route::Route(const Route& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  short_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_short_name()) {
    short_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.short_name_);
  }
  headsign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_headsign()) {
    headsign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headsign_);
  }
  // @@protoc_insertion_point(copy_constructor:busboy.api.Route)
}

void Route::SharedCtor() {
  short_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headsign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Route::~Route() {
  // @@protoc_insertion_point(destructor:busboy.api.Route)
  SharedDtor();
}

void Route::SharedDtor() {
  short_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headsign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Route::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Route::descriptor() {
  ::protobuf_bus_2dboy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bus_2dboy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Route& Route::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bus_2dboy_2eproto::scc_info_Route.base);
  return *internal_default_instance();
}


void Route::Clear() {
// @@protoc_insertion_point(message_clear_start:busboy.api.Route)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      short_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      headsign_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Route::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:busboy.api.Route)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string short_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_short_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->short_name().data(), static_cast<int>(this->short_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "busboy.api.Route.short_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string headsign = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_headsign()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->headsign().data(), static_cast<int>(this->headsign().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "busboy.api.Route.headsign");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:busboy.api.Route)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:busboy.api.Route)
  return false;
#undef DO_
}

void Route::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:busboy.api.Route)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string short_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->short_name().data(), static_cast<int>(this->short_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "busboy.api.Route.short_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->short_name(), output);
  }

  // optional string headsign = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headsign().data(), static_cast<int>(this->headsign().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "busboy.api.Route.headsign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->headsign(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:busboy.api.Route)
}

::google::protobuf::uint8* Route::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:busboy.api.Route)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string short_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->short_name().data(), static_cast<int>(this->short_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "busboy.api.Route.short_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->short_name(), target);
  }

  // optional string headsign = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headsign().data(), static_cast<int>(this->headsign().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "busboy.api.Route.headsign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->headsign(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:busboy.api.Route)
  return target;
}

size_t Route::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:busboy.api.Route)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string short_name = 1;
    if (has_short_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->short_name());
    }

    // optional string headsign = 2;
    if (has_headsign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->headsign());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Route::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:busboy.api.Route)
  GOOGLE_DCHECK_NE(&from, this);
  const Route* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Route>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:busboy.api.Route)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:busboy.api.Route)
    MergeFrom(*source);
  }
}

void Route::MergeFrom(const Route& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:busboy.api.Route)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_short_name();
      short_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.short_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_headsign();
      headsign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headsign_);
    }
  }
}

void Route::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:busboy.api.Route)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Route::CopyFrom(const Route& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:busboy.api.Route)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Route::IsInitialized() const {
  return true;
}

void Route::Swap(Route* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Route::InternalSwap(Route* other) {
  using std::swap;
  short_name_.Swap(&other->short_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  headsign_.Swap(&other->headsign_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Route::GetMetadata() const {
  protobuf_bus_2dboy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bus_2dboy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TemporaryMessage::InitAsDefaultInstance() {
  ::busboy::api::_TemporaryMessage_default_instance_._instance.get_mutable()->time_frame_ = const_cast< ::busboy::api::TimeFrame*>(
      ::busboy::api::TimeFrame::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TemporaryMessage::kTimeFrameFieldNumber;
const int TemporaryMessage::kMessageFieldNumber;
const int TemporaryMessage::kColorSchemeOverrideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TemporaryMessage::TemporaryMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bus_2dboy_2eproto::scc_info_TemporaryMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:busboy.api.TemporaryMessage)
}
TemporaryMessage::TemporaryMessage(const TemporaryMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      message_(from.message_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_time_frame()) {
    time_frame_ = new ::busboy::api::TimeFrame(*from.time_frame_);
  } else {
    time_frame_ = NULL;
  }
  color_scheme_override_ = from.color_scheme_override_;
  // @@protoc_insertion_point(copy_constructor:busboy.api.TemporaryMessage)
}

void TemporaryMessage::SharedCtor() {
  ::memset(&time_frame_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&color_scheme_override_) -
      reinterpret_cast<char*>(&time_frame_)) + sizeof(color_scheme_override_));
}

TemporaryMessage::~TemporaryMessage() {
  // @@protoc_insertion_point(destructor:busboy.api.TemporaryMessage)
  SharedDtor();
}

void TemporaryMessage::SharedDtor() {
  if (this != internal_default_instance()) delete time_frame_;
}

void TemporaryMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TemporaryMessage::descriptor() {
  ::protobuf_bus_2dboy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bus_2dboy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TemporaryMessage& TemporaryMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bus_2dboy_2eproto::scc_info_TemporaryMessage.base);
  return *internal_default_instance();
}


void TemporaryMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:busboy.api.TemporaryMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(time_frame_ != NULL);
    time_frame_->Clear();
  }
  color_scheme_override_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TemporaryMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:busboy.api.TemporaryMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .busboy.api.TimeFrame time_frame = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message(this->message_size() - 1).data(),
            static_cast<int>(this->message(this->message_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "busboy.api.TemporaryMessage.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .busboy.api.ColorScheme color_scheme_override = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::busboy::api::ColorScheme_IsValid(value)) {
            set_color_scheme_override(static_cast< ::busboy::api::ColorScheme >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:busboy.api.TemporaryMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:busboy.api.TemporaryMessage)
  return false;
#undef DO_
}

void TemporaryMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:busboy.api.TemporaryMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .busboy.api.TimeFrame time_frame = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_time_frame(), output);
  }

  // repeated string message = 2;
  for (int i = 0, n = this->message_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message(i).data(), static_cast<int>(this->message(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "busboy.api.TemporaryMessage.message");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->message(i), output);
  }

  // optional .busboy.api.ColorScheme color_scheme_override = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->color_scheme_override(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:busboy.api.TemporaryMessage)
}

::google::protobuf::uint8* TemporaryMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:busboy.api.TemporaryMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .busboy.api.TimeFrame time_frame = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_time_frame(), deterministic, target);
  }

  // repeated string message = 2;
  for (int i = 0, n = this->message_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message(i).data(), static_cast<int>(this->message(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "busboy.api.TemporaryMessage.message");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->message(i), target);
  }

  // optional .busboy.api.ColorScheme color_scheme_override = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->color_scheme_override(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:busboy.api.TemporaryMessage)
  return target;
}

size_t TemporaryMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:busboy.api.TemporaryMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string message = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->message_size());
  for (int i = 0, n = this->message_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->message(i));
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .busboy.api.TimeFrame time_frame = 1;
    if (has_time_frame()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *time_frame_);
    }

    // optional .busboy.api.ColorScheme color_scheme_override = 3;
    if (has_color_scheme_override()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->color_scheme_override());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TemporaryMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:busboy.api.TemporaryMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const TemporaryMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TemporaryMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:busboy.api.TemporaryMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:busboy.api.TemporaryMessage)
    MergeFrom(*source);
  }
}

void TemporaryMessage::MergeFrom(const TemporaryMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:busboy.api.TemporaryMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  message_.MergeFrom(from.message_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_time_frame()->::busboy::api::TimeFrame::MergeFrom(from.time_frame());
    }
    if (cached_has_bits & 0x00000002u) {
      color_scheme_override_ = from.color_scheme_override_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TemporaryMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:busboy.api.TemporaryMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TemporaryMessage::CopyFrom(const TemporaryMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:busboy.api.TemporaryMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TemporaryMessage::IsInitialized() const {
  return true;
}

void TemporaryMessage::Swap(TemporaryMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TemporaryMessage::InternalSwap(TemporaryMessage* other) {
  using std::swap;
  message_.InternalSwap(CastToBase(&other->message_));
  swap(time_frame_, other->time_frame_);
  swap(color_scheme_override_, other->color_scheme_override_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TemporaryMessage::GetMetadata() const {
  protobuf_bus_2dboy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bus_2dboy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TemporaryStyle::InitAsDefaultInstance() {
  ::busboy::api::_TemporaryStyle_default_instance_._instance.get_mutable()->time_frame_ = const_cast< ::busboy::api::TimeFrame*>(
      ::busboy::api::TimeFrame::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TemporaryStyle::kTimeFrameFieldNumber;
const int TemporaryStyle::kColorSchemeOverrideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TemporaryStyle::TemporaryStyle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bus_2dboy_2eproto::scc_info_TemporaryStyle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:busboy.api.TemporaryStyle)
}
TemporaryStyle::TemporaryStyle(const TemporaryStyle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_time_frame()) {
    time_frame_ = new ::busboy::api::TimeFrame(*from.time_frame_);
  } else {
    time_frame_ = NULL;
  }
  color_scheme_override_ = from.color_scheme_override_;
  // @@protoc_insertion_point(copy_constructor:busboy.api.TemporaryStyle)
}

void TemporaryStyle::SharedCtor() {
  ::memset(&time_frame_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&color_scheme_override_) -
      reinterpret_cast<char*>(&time_frame_)) + sizeof(color_scheme_override_));
}

TemporaryStyle::~TemporaryStyle() {
  // @@protoc_insertion_point(destructor:busboy.api.TemporaryStyle)
  SharedDtor();
}

void TemporaryStyle::SharedDtor() {
  if (this != internal_default_instance()) delete time_frame_;
}

void TemporaryStyle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TemporaryStyle::descriptor() {
  ::protobuf_bus_2dboy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bus_2dboy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TemporaryStyle& TemporaryStyle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bus_2dboy_2eproto::scc_info_TemporaryStyle.base);
  return *internal_default_instance();
}


void TemporaryStyle::Clear() {
// @@protoc_insertion_point(message_clear_start:busboy.api.TemporaryStyle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(time_frame_ != NULL);
    time_frame_->Clear();
  }
  color_scheme_override_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TemporaryStyle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:busboy.api.TemporaryStyle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .busboy.api.TimeFrame time_frame = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .busboy.api.ColorScheme color_scheme_override = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::busboy::api::ColorScheme_IsValid(value)) {
            set_color_scheme_override(static_cast< ::busboy::api::ColorScheme >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:busboy.api.TemporaryStyle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:busboy.api.TemporaryStyle)
  return false;
#undef DO_
}

void TemporaryStyle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:busboy.api.TemporaryStyle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .busboy.api.TimeFrame time_frame = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_time_frame(), output);
  }

  // optional .busboy.api.ColorScheme color_scheme_override = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->color_scheme_override(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:busboy.api.TemporaryStyle)
}

::google::protobuf::uint8* TemporaryStyle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:busboy.api.TemporaryStyle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .busboy.api.TimeFrame time_frame = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_time_frame(), deterministic, target);
  }

  // optional .busboy.api.ColorScheme color_scheme_override = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->color_scheme_override(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:busboy.api.TemporaryStyle)
  return target;
}

size_t TemporaryStyle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:busboy.api.TemporaryStyle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .busboy.api.TimeFrame time_frame = 1;
    if (has_time_frame()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *time_frame_);
    }

    // optional .busboy.api.ColorScheme color_scheme_override = 2;
    if (has_color_scheme_override()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->color_scheme_override());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TemporaryStyle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:busboy.api.TemporaryStyle)
  GOOGLE_DCHECK_NE(&from, this);
  const TemporaryStyle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TemporaryStyle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:busboy.api.TemporaryStyle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:busboy.api.TemporaryStyle)
    MergeFrom(*source);
  }
}

void TemporaryStyle::MergeFrom(const TemporaryStyle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:busboy.api.TemporaryStyle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_time_frame()->::busboy::api::TimeFrame::MergeFrom(from.time_frame());
    }
    if (cached_has_bits & 0x00000002u) {
      color_scheme_override_ = from.color_scheme_override_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TemporaryStyle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:busboy.api.TemporaryStyle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TemporaryStyle::CopyFrom(const TemporaryStyle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:busboy.api.TemporaryStyle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TemporaryStyle::IsInitialized() const {
  return true;
}

void TemporaryStyle::Swap(TemporaryStyle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TemporaryStyle::InternalSwap(TemporaryStyle* other) {
  using std::swap;
  swap(time_frame_, other->time_frame_);
  swap(color_scheme_override_, other->color_scheme_override_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TemporaryStyle::GetMetadata() const {
  protobuf_bus_2dboy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bus_2dboy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TimeFrame::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimeFrame::kStartTimeMsSinceEpochFieldNumber;
const int TimeFrame::kEndTimeMsSinceEpochFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeFrame::TimeFrame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bus_2dboy_2eproto::scc_info_TimeFrame.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:busboy.api.TimeFrame)
}
TimeFrame::TimeFrame(const TimeFrame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_time_ms_since_epoch_, &from.start_time_ms_since_epoch_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_time_ms_since_epoch_) -
    reinterpret_cast<char*>(&start_time_ms_since_epoch_)) + sizeof(end_time_ms_since_epoch_));
  // @@protoc_insertion_point(copy_constructor:busboy.api.TimeFrame)
}

void TimeFrame::SharedCtor() {
  ::memset(&start_time_ms_since_epoch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_ms_since_epoch_) -
      reinterpret_cast<char*>(&start_time_ms_since_epoch_)) + sizeof(end_time_ms_since_epoch_));
}

TimeFrame::~TimeFrame() {
  // @@protoc_insertion_point(destructor:busboy.api.TimeFrame)
  SharedDtor();
}

void TimeFrame::SharedDtor() {
}

void TimeFrame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TimeFrame::descriptor() {
  ::protobuf_bus_2dboy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bus_2dboy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimeFrame& TimeFrame::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bus_2dboy_2eproto::scc_info_TimeFrame.base);
  return *internal_default_instance();
}


void TimeFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:busboy.api.TimeFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&start_time_ms_since_epoch_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&end_time_ms_since_epoch_) -
        reinterpret_cast<char*>(&start_time_ms_since_epoch_)) + sizeof(end_time_ms_since_epoch_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TimeFrame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:busboy.api.TimeFrame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 start_time_ms_since_epoch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_start_time_ms_since_epoch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_time_ms_since_epoch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 end_time_ms_since_epoch = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_end_time_ms_since_epoch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &end_time_ms_since_epoch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:busboy.api.TimeFrame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:busboy.api.TimeFrame)
  return false;
#undef DO_
}

void TimeFrame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:busboy.api.TimeFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 start_time_ms_since_epoch = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->start_time_ms_since_epoch(), output);
  }

  // optional uint64 end_time_ms_since_epoch = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->end_time_ms_since_epoch(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:busboy.api.TimeFrame)
}

::google::protobuf::uint8* TimeFrame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:busboy.api.TimeFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 start_time_ms_since_epoch = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->start_time_ms_since_epoch(), target);
  }

  // optional uint64 end_time_ms_since_epoch = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->end_time_ms_since_epoch(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:busboy.api.TimeFrame)
  return target;
}

size_t TimeFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:busboy.api.TimeFrame)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 start_time_ms_since_epoch = 1;
    if (has_start_time_ms_since_epoch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->start_time_ms_since_epoch());
    }

    // optional uint64 end_time_ms_since_epoch = 2;
    if (has_end_time_ms_since_epoch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->end_time_ms_since_epoch());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TimeFrame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:busboy.api.TimeFrame)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeFrame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimeFrame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:busboy.api.TimeFrame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:busboy.api.TimeFrame)
    MergeFrom(*source);
  }
}

void TimeFrame::MergeFrom(const TimeFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:busboy.api.TimeFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      start_time_ms_since_epoch_ = from.start_time_ms_since_epoch_;
    }
    if (cached_has_bits & 0x00000002u) {
      end_time_ms_since_epoch_ = from.end_time_ms_since_epoch_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TimeFrame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:busboy.api.TimeFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeFrame::CopyFrom(const TimeFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:busboy.api.TimeFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeFrame::IsInitialized() const {
  return true;
}

void TimeFrame::Swap(TimeFrame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeFrame::InternalSwap(TimeFrame* other) {
  using std::swap;
  swap(start_time_ms_since_epoch_, other->start_time_ms_since_epoch_);
  swap(end_time_ms_since_epoch_, other->end_time_ms_since_epoch_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TimeFrame::GetMetadata() const {
  protobuf_bus_2dboy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bus_2dboy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace busboy
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::busboy::api::Response* Arena::CreateMaybeMessage< ::busboy::api::Response >(Arena* arena) {
  return Arena::CreateInternal< ::busboy::api::Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::busboy::api::DisplayedTime* Arena::CreateMaybeMessage< ::busboy::api::DisplayedTime >(Arena* arena) {
  return Arena::CreateInternal< ::busboy::api::DisplayedTime >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::busboy::api::Arrival* Arena::CreateMaybeMessage< ::busboy::api::Arrival >(Arena* arena) {
  return Arena::CreateInternal< ::busboy::api::Arrival >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::busboy::api::Route* Arena::CreateMaybeMessage< ::busboy::api::Route >(Arena* arena) {
  return Arena::CreateInternal< ::busboy::api::Route >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::busboy::api::TemporaryMessage* Arena::CreateMaybeMessage< ::busboy::api::TemporaryMessage >(Arena* arena) {
  return Arena::CreateInternal< ::busboy::api::TemporaryMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::busboy::api::TemporaryStyle* Arena::CreateMaybeMessage< ::busboy::api::TemporaryStyle >(Arena* arena) {
  return Arena::CreateInternal< ::busboy::api::TemporaryStyle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::busboy::api::TimeFrame* Arena::CreateMaybeMessage< ::busboy::api::TimeFrame >(Arena* arena) {
  return Arena::CreateInternal< ::busboy::api::TimeFrame >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
