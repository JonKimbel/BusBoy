// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bus-boy.proto

#ifndef PROTOBUF_INCLUDED_bus_2dboy_2eproto
#define PROTOBUF_INCLUDED_bus_2dboy_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_bus_2dboy_2eproto 

namespace protobuf_bus_2dboy_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_bus_2dboy_2eproto
namespace busboy {
namespace api {
class Arrival;
class ArrivalDefaultTypeInternal;
extern ArrivalDefaultTypeInternal _Arrival_default_instance_;
class DisplayedTime;
class DisplayedTimeDefaultTypeInternal;
extern DisplayedTimeDefaultTypeInternal _DisplayedTime_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class Route;
class RouteDefaultTypeInternal;
extern RouteDefaultTypeInternal _Route_default_instance_;
class TemporaryMessage;
class TemporaryMessageDefaultTypeInternal;
extern TemporaryMessageDefaultTypeInternal _TemporaryMessage_default_instance_;
class TemporaryStyle;
class TemporaryStyleDefaultTypeInternal;
extern TemporaryStyleDefaultTypeInternal _TemporaryStyle_default_instance_;
class TimeFrame;
class TimeFrameDefaultTypeInternal;
extern TimeFrameDefaultTypeInternal _TimeFrame_default_instance_;
}  // namespace api
}  // namespace busboy
namespace google {
namespace protobuf {
template<> ::busboy::api::Arrival* Arena::CreateMaybeMessage<::busboy::api::Arrival>(Arena*);
template<> ::busboy::api::DisplayedTime* Arena::CreateMaybeMessage<::busboy::api::DisplayedTime>(Arena*);
template<> ::busboy::api::Response* Arena::CreateMaybeMessage<::busboy::api::Response>(Arena*);
template<> ::busboy::api::Route* Arena::CreateMaybeMessage<::busboy::api::Route>(Arena*);
template<> ::busboy::api::TemporaryMessage* Arena::CreateMaybeMessage<::busboy::api::TemporaryMessage>(Arena*);
template<> ::busboy::api::TemporaryStyle* Arena::CreateMaybeMessage<::busboy::api::TemporaryStyle>(Arena*);
template<> ::busboy::api::TimeFrame* Arena::CreateMaybeMessage<::busboy::api::TimeFrame>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace busboy {
namespace api {

enum ColorScheme {
  SEAHAWKS = 0,
  RAINBOW = 1,
  SPRING = 2,
  SUMMER = 3,
  FALL = 4,
  WINTER = 5
};
bool ColorScheme_IsValid(int value);
const ColorScheme ColorScheme_MIN = SEAHAWKS;
const ColorScheme ColorScheme_MAX = WINTER;
const int ColorScheme_ARRAYSIZE = ColorScheme_MAX + 1;

const ::google::protobuf::EnumDescriptor* ColorScheme_descriptor();
inline const ::std::string& ColorScheme_Name(ColorScheme value) {
  return ::google::protobuf::internal::NameOfEnum(
    ColorScheme_descriptor(), value);
}
inline bool ColorScheme_Parse(
    const ::std::string& name, ColorScheme* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ColorScheme>(
    ColorScheme_descriptor(), name, value);
}
// ===================================================================

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:busboy.api.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const final {
    return CreateMaybeMessage<Response>(NULL);
  }

  Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .busboy.api.Arrival arrivals = 2;
  int arrivals_size() const;
  void clear_arrivals();
  static const int kArrivalsFieldNumber = 2;
  ::busboy::api::Arrival* mutable_arrivals(int index);
  ::google::protobuf::RepeatedPtrField< ::busboy::api::Arrival >*
      mutable_arrivals();
  const ::busboy::api::Arrival& arrivals(int index) const;
  ::busboy::api::Arrival* add_arrivals();
  const ::google::protobuf::RepeatedPtrField< ::busboy::api::Arrival >&
      arrivals() const;

  // repeated .busboy.api.Route routes = 3;
  int routes_size() const;
  void clear_routes();
  static const int kRoutesFieldNumber = 3;
  ::busboy::api::Route* mutable_routes(int index);
  ::google::protobuf::RepeatedPtrField< ::busboy::api::Route >*
      mutable_routes();
  const ::busboy::api::Route& routes(int index) const;
  ::busboy::api::Route* add_routes();
  const ::google::protobuf::RepeatedPtrField< ::busboy::api::Route >&
      routes() const;

  // repeated .busboy.api.TemporaryMessage temporary_message = 4;
  int temporary_message_size() const;
  void clear_temporary_message();
  static const int kTemporaryMessageFieldNumber = 4;
  ::busboy::api::TemporaryMessage* mutable_temporary_message(int index);
  ::google::protobuf::RepeatedPtrField< ::busboy::api::TemporaryMessage >*
      mutable_temporary_message();
  const ::busboy::api::TemporaryMessage& temporary_message(int index) const;
  ::busboy::api::TemporaryMessage* add_temporary_message();
  const ::google::protobuf::RepeatedPtrField< ::busboy::api::TemporaryMessage >&
      temporary_message() const;

  // repeated .busboy.api.TemporaryStyle temporary_style = 5;
  int temporary_style_size() const;
  void clear_temporary_style();
  static const int kTemporaryStyleFieldNumber = 5;
  ::busboy::api::TemporaryStyle* mutable_temporary_style(int index);
  ::google::protobuf::RepeatedPtrField< ::busboy::api::TemporaryStyle >*
      mutable_temporary_style();
  const ::busboy::api::TemporaryStyle& temporary_style(int index) const;
  ::busboy::api::TemporaryStyle* add_temporary_style();
  const ::google::protobuf::RepeatedPtrField< ::busboy::api::TemporaryStyle >&
      temporary_style() const;

  // optional .busboy.api.DisplayedTime time = 1;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  private:
  const ::busboy::api::DisplayedTime& _internal_time() const;
  public:
  const ::busboy::api::DisplayedTime& time() const;
  ::busboy::api::DisplayedTime* release_time();
  ::busboy::api::DisplayedTime* mutable_time();
  void set_allocated_time(::busboy::api::DisplayedTime* time);

  // @@protoc_insertion_point(class_scope:busboy.api.Response)
 private:
  void set_has_time();
  void clear_has_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::busboy::api::Arrival > arrivals_;
  ::google::protobuf::RepeatedPtrField< ::busboy::api::Route > routes_;
  ::google::protobuf::RepeatedPtrField< ::busboy::api::TemporaryMessage > temporary_message_;
  ::google::protobuf::RepeatedPtrField< ::busboy::api::TemporaryStyle > temporary_style_;
  ::busboy::api::DisplayedTime* time_;
  friend struct ::protobuf_bus_2dboy_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DisplayedTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:busboy.api.DisplayedTime) */ {
 public:
  DisplayedTime();
  virtual ~DisplayedTime();

  DisplayedTime(const DisplayedTime& from);

  inline DisplayedTime& operator=(const DisplayedTime& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DisplayedTime(DisplayedTime&& from) noexcept
    : DisplayedTime() {
    *this = ::std::move(from);
  }

  inline DisplayedTime& operator=(DisplayedTime&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DisplayedTime& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DisplayedTime* internal_default_instance() {
    return reinterpret_cast<const DisplayedTime*>(
               &_DisplayedTime_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(DisplayedTime* other);
  friend void swap(DisplayedTime& a, DisplayedTime& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DisplayedTime* New() const final {
    return CreateMaybeMessage<DisplayedTime>(NULL);
  }

  DisplayedTime* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DisplayedTime>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DisplayedTime& from);
  void MergeFrom(const DisplayedTime& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DisplayedTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ms_since_epoch = 1;
  bool has_ms_since_epoch() const;
  void clear_ms_since_epoch();
  static const int kMsSinceEpochFieldNumber = 1;
  ::google::protobuf::uint64 ms_since_epoch() const;
  void set_ms_since_epoch(::google::protobuf::uint64 value);

  // optional bool daylight_savings_time = 2;
  bool has_daylight_savings_time() const;
  void clear_daylight_savings_time();
  static const int kDaylightSavingsTimeFieldNumber = 2;
  bool daylight_savings_time() const;
  void set_daylight_savings_time(bool value);

  // @@protoc_insertion_point(class_scope:busboy.api.DisplayedTime)
 private:
  void set_has_ms_since_epoch();
  void clear_has_ms_since_epoch();
  void set_has_daylight_savings_time();
  void clear_has_daylight_savings_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 ms_since_epoch_;
  bool daylight_savings_time_;
  friend struct ::protobuf_bus_2dboy_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Arrival : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:busboy.api.Arrival) */ {
 public:
  Arrival();
  virtual ~Arrival();

  Arrival(const Arrival& from);

  inline Arrival& operator=(const Arrival& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Arrival(Arrival&& from) noexcept
    : Arrival() {
    *this = ::std::move(from);
  }

  inline Arrival& operator=(Arrival&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Arrival& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Arrival* internal_default_instance() {
    return reinterpret_cast<const Arrival*>(
               &_Arrival_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Arrival* other);
  friend void swap(Arrival& a, Arrival& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Arrival* New() const final {
    return CreateMaybeMessage<Arrival>(NULL);
  }

  Arrival* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Arrival>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Arrival& from);
  void MergeFrom(const Arrival& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Arrival* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 route_index = 1;
  bool has_route_index() const;
  void clear_route_index();
  static const int kRouteIndexFieldNumber = 1;
  ::google::protobuf::uint32 route_index() const;
  void set_route_index(::google::protobuf::uint32 value);

  // optional uint32 ms_to_arrival = 2;
  bool has_ms_to_arrival() const;
  void clear_ms_to_arrival();
  static const int kMsToArrivalFieldNumber = 2;
  ::google::protobuf::uint32 ms_to_arrival() const;
  void set_ms_to_arrival(::google::protobuf::uint32 value);

  // optional bool predicted = 3;
  bool has_predicted() const;
  void clear_predicted();
  static const int kPredictedFieldNumber = 3;
  bool predicted() const;
  void set_predicted(bool value);

  // @@protoc_insertion_point(class_scope:busboy.api.Arrival)
 private:
  void set_has_route_index();
  void clear_has_route_index();
  void set_has_ms_to_arrival();
  void clear_has_ms_to_arrival();
  void set_has_predicted();
  void clear_has_predicted();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 route_index_;
  ::google::protobuf::uint32 ms_to_arrival_;
  bool predicted_;
  friend struct ::protobuf_bus_2dboy_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Route : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:busboy.api.Route) */ {
 public:
  Route();
  virtual ~Route();

  Route(const Route& from);

  inline Route& operator=(const Route& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Route(Route&& from) noexcept
    : Route() {
    *this = ::std::move(from);
  }

  inline Route& operator=(Route&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Route& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Route* internal_default_instance() {
    return reinterpret_cast<const Route*>(
               &_Route_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Route* other);
  friend void swap(Route& a, Route& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Route* New() const final {
    return CreateMaybeMessage<Route>(NULL);
  }

  Route* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Route>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Route& from);
  void MergeFrom(const Route& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Route* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string short_name = 1;
  bool has_short_name() const;
  void clear_short_name();
  static const int kShortNameFieldNumber = 1;
  const ::std::string& short_name() const;
  void set_short_name(const ::std::string& value);
  #if LANG_CXX11
  void set_short_name(::std::string&& value);
  #endif
  void set_short_name(const char* value);
  void set_short_name(const char* value, size_t size);
  ::std::string* mutable_short_name();
  ::std::string* release_short_name();
  void set_allocated_short_name(::std::string* short_name);

  // optional string headsign = 2;
  bool has_headsign() const;
  void clear_headsign();
  static const int kHeadsignFieldNumber = 2;
  const ::std::string& headsign() const;
  void set_headsign(const ::std::string& value);
  #if LANG_CXX11
  void set_headsign(::std::string&& value);
  #endif
  void set_headsign(const char* value);
  void set_headsign(const char* value, size_t size);
  ::std::string* mutable_headsign();
  ::std::string* release_headsign();
  void set_allocated_headsign(::std::string* headsign);

  // @@protoc_insertion_point(class_scope:busboy.api.Route)
 private:
  void set_has_short_name();
  void clear_has_short_name();
  void set_has_headsign();
  void clear_has_headsign();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr short_name_;
  ::google::protobuf::internal::ArenaStringPtr headsign_;
  friend struct ::protobuf_bus_2dboy_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TemporaryMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:busboy.api.TemporaryMessage) */ {
 public:
  TemporaryMessage();
  virtual ~TemporaryMessage();

  TemporaryMessage(const TemporaryMessage& from);

  inline TemporaryMessage& operator=(const TemporaryMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TemporaryMessage(TemporaryMessage&& from) noexcept
    : TemporaryMessage() {
    *this = ::std::move(from);
  }

  inline TemporaryMessage& operator=(TemporaryMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TemporaryMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TemporaryMessage* internal_default_instance() {
    return reinterpret_cast<const TemporaryMessage*>(
               &_TemporaryMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(TemporaryMessage* other);
  friend void swap(TemporaryMessage& a, TemporaryMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TemporaryMessage* New() const final {
    return CreateMaybeMessage<TemporaryMessage>(NULL);
  }

  TemporaryMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TemporaryMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TemporaryMessage& from);
  void MergeFrom(const TemporaryMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TemporaryMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string message = 2;
  int message_size() const;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message(int index) const;
  ::std::string* mutable_message(int index);
  void set_message(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_message(int index, ::std::string&& value);
  #endif
  void set_message(int index, const char* value);
  void set_message(int index, const char* value, size_t size);
  ::std::string* add_message();
  void add_message(const ::std::string& value);
  #if LANG_CXX11
  void add_message(::std::string&& value);
  #endif
  void add_message(const char* value);
  void add_message(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& message() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_message();

  // optional .busboy.api.TimeFrame time_frame = 1;
  bool has_time_frame() const;
  void clear_time_frame();
  static const int kTimeFrameFieldNumber = 1;
  private:
  const ::busboy::api::TimeFrame& _internal_time_frame() const;
  public:
  const ::busboy::api::TimeFrame& time_frame() const;
  ::busboy::api::TimeFrame* release_time_frame();
  ::busboy::api::TimeFrame* mutable_time_frame();
  void set_allocated_time_frame(::busboy::api::TimeFrame* time_frame);

  // optional .busboy.api.ColorScheme color_scheme_override = 3;
  bool has_color_scheme_override() const;
  void clear_color_scheme_override();
  static const int kColorSchemeOverrideFieldNumber = 3;
  ::busboy::api::ColorScheme color_scheme_override() const;
  void set_color_scheme_override(::busboy::api::ColorScheme value);

  // @@protoc_insertion_point(class_scope:busboy.api.TemporaryMessage)
 private:
  void set_has_time_frame();
  void clear_has_time_frame();
  void set_has_color_scheme_override();
  void clear_has_color_scheme_override();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> message_;
  ::busboy::api::TimeFrame* time_frame_;
  int color_scheme_override_;
  friend struct ::protobuf_bus_2dboy_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TemporaryStyle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:busboy.api.TemporaryStyle) */ {
 public:
  TemporaryStyle();
  virtual ~TemporaryStyle();

  TemporaryStyle(const TemporaryStyle& from);

  inline TemporaryStyle& operator=(const TemporaryStyle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TemporaryStyle(TemporaryStyle&& from) noexcept
    : TemporaryStyle() {
    *this = ::std::move(from);
  }

  inline TemporaryStyle& operator=(TemporaryStyle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TemporaryStyle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TemporaryStyle* internal_default_instance() {
    return reinterpret_cast<const TemporaryStyle*>(
               &_TemporaryStyle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(TemporaryStyle* other);
  friend void swap(TemporaryStyle& a, TemporaryStyle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TemporaryStyle* New() const final {
    return CreateMaybeMessage<TemporaryStyle>(NULL);
  }

  TemporaryStyle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TemporaryStyle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TemporaryStyle& from);
  void MergeFrom(const TemporaryStyle& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TemporaryStyle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .busboy.api.TimeFrame time_frame = 1;
  bool has_time_frame() const;
  void clear_time_frame();
  static const int kTimeFrameFieldNumber = 1;
  private:
  const ::busboy::api::TimeFrame& _internal_time_frame() const;
  public:
  const ::busboy::api::TimeFrame& time_frame() const;
  ::busboy::api::TimeFrame* release_time_frame();
  ::busboy::api::TimeFrame* mutable_time_frame();
  void set_allocated_time_frame(::busboy::api::TimeFrame* time_frame);

  // optional .busboy.api.ColorScheme color_scheme_override = 2;
  bool has_color_scheme_override() const;
  void clear_color_scheme_override();
  static const int kColorSchemeOverrideFieldNumber = 2;
  ::busboy::api::ColorScheme color_scheme_override() const;
  void set_color_scheme_override(::busboy::api::ColorScheme value);

  // @@protoc_insertion_point(class_scope:busboy.api.TemporaryStyle)
 private:
  void set_has_time_frame();
  void clear_has_time_frame();
  void set_has_color_scheme_override();
  void clear_has_color_scheme_override();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::busboy::api::TimeFrame* time_frame_;
  int color_scheme_override_;
  friend struct ::protobuf_bus_2dboy_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TimeFrame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:busboy.api.TimeFrame) */ {
 public:
  TimeFrame();
  virtual ~TimeFrame();

  TimeFrame(const TimeFrame& from);

  inline TimeFrame& operator=(const TimeFrame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TimeFrame(TimeFrame&& from) noexcept
    : TimeFrame() {
    *this = ::std::move(from);
  }

  inline TimeFrame& operator=(TimeFrame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TimeFrame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TimeFrame* internal_default_instance() {
    return reinterpret_cast<const TimeFrame*>(
               &_TimeFrame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(TimeFrame* other);
  friend void swap(TimeFrame& a, TimeFrame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TimeFrame* New() const final {
    return CreateMaybeMessage<TimeFrame>(NULL);
  }

  TimeFrame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TimeFrame>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TimeFrame& from);
  void MergeFrom(const TimeFrame& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TimeFrame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 start_time_ms_since_epoch = 1;
  bool has_start_time_ms_since_epoch() const;
  void clear_start_time_ms_since_epoch();
  static const int kStartTimeMsSinceEpochFieldNumber = 1;
  ::google::protobuf::uint64 start_time_ms_since_epoch() const;
  void set_start_time_ms_since_epoch(::google::protobuf::uint64 value);

  // optional uint64 end_time_ms_since_epoch = 2;
  bool has_end_time_ms_since_epoch() const;
  void clear_end_time_ms_since_epoch();
  static const int kEndTimeMsSinceEpochFieldNumber = 2;
  ::google::protobuf::uint64 end_time_ms_since_epoch() const;
  void set_end_time_ms_since_epoch(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:busboy.api.TimeFrame)
 private:
  void set_has_start_time_ms_since_epoch();
  void clear_has_start_time_ms_since_epoch();
  void set_has_end_time_ms_since_epoch();
  void clear_has_end_time_ms_since_epoch();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 start_time_ms_since_epoch_;
  ::google::protobuf::uint64 end_time_ms_since_epoch_;
  friend struct ::protobuf_bus_2dboy_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Response

// optional .busboy.api.DisplayedTime time = 1;
inline bool Response::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_time() {
  if (time_ != NULL) time_->Clear();
  clear_has_time();
}
inline const ::busboy::api::DisplayedTime& Response::_internal_time() const {
  return *time_;
}
inline const ::busboy::api::DisplayedTime& Response::time() const {
  const ::busboy::api::DisplayedTime* p = time_;
  // @@protoc_insertion_point(field_get:busboy.api.Response.time)
  return p != NULL ? *p : *reinterpret_cast<const ::busboy::api::DisplayedTime*>(
      &::busboy::api::_DisplayedTime_default_instance_);
}
inline ::busboy::api::DisplayedTime* Response::release_time() {
  // @@protoc_insertion_point(field_release:busboy.api.Response.time)
  clear_has_time();
  ::busboy::api::DisplayedTime* temp = time_;
  time_ = NULL;
  return temp;
}
inline ::busboy::api::DisplayedTime* Response::mutable_time() {
  set_has_time();
  if (time_ == NULL) {
    auto* p = CreateMaybeMessage<::busboy::api::DisplayedTime>(GetArenaNoVirtual());
    time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:busboy.api.Response.time)
  return time_;
}
inline void Response::set_allocated_time(::busboy::api::DisplayedTime* time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete time_;
  }
  if (time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time, submessage_arena);
    }
    set_has_time();
  } else {
    clear_has_time();
  }
  time_ = time;
  // @@protoc_insertion_point(field_set_allocated:busboy.api.Response.time)
}

// repeated .busboy.api.Arrival arrivals = 2;
inline int Response::arrivals_size() const {
  return arrivals_.size();
}
inline void Response::clear_arrivals() {
  arrivals_.Clear();
}
inline ::busboy::api::Arrival* Response::mutable_arrivals(int index) {
  // @@protoc_insertion_point(field_mutable:busboy.api.Response.arrivals)
  return arrivals_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::busboy::api::Arrival >*
Response::mutable_arrivals() {
  // @@protoc_insertion_point(field_mutable_list:busboy.api.Response.arrivals)
  return &arrivals_;
}
inline const ::busboy::api::Arrival& Response::arrivals(int index) const {
  // @@protoc_insertion_point(field_get:busboy.api.Response.arrivals)
  return arrivals_.Get(index);
}
inline ::busboy::api::Arrival* Response::add_arrivals() {
  // @@protoc_insertion_point(field_add:busboy.api.Response.arrivals)
  return arrivals_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::busboy::api::Arrival >&
Response::arrivals() const {
  // @@protoc_insertion_point(field_list:busboy.api.Response.arrivals)
  return arrivals_;
}

// repeated .busboy.api.Route routes = 3;
inline int Response::routes_size() const {
  return routes_.size();
}
inline void Response::clear_routes() {
  routes_.Clear();
}
inline ::busboy::api::Route* Response::mutable_routes(int index) {
  // @@protoc_insertion_point(field_mutable:busboy.api.Response.routes)
  return routes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::busboy::api::Route >*
Response::mutable_routes() {
  // @@protoc_insertion_point(field_mutable_list:busboy.api.Response.routes)
  return &routes_;
}
inline const ::busboy::api::Route& Response::routes(int index) const {
  // @@protoc_insertion_point(field_get:busboy.api.Response.routes)
  return routes_.Get(index);
}
inline ::busboy::api::Route* Response::add_routes() {
  // @@protoc_insertion_point(field_add:busboy.api.Response.routes)
  return routes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::busboy::api::Route >&
Response::routes() const {
  // @@protoc_insertion_point(field_list:busboy.api.Response.routes)
  return routes_;
}

// repeated .busboy.api.TemporaryMessage temporary_message = 4;
inline int Response::temporary_message_size() const {
  return temporary_message_.size();
}
inline void Response::clear_temporary_message() {
  temporary_message_.Clear();
}
inline ::busboy::api::TemporaryMessage* Response::mutable_temporary_message(int index) {
  // @@protoc_insertion_point(field_mutable:busboy.api.Response.temporary_message)
  return temporary_message_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::busboy::api::TemporaryMessage >*
Response::mutable_temporary_message() {
  // @@protoc_insertion_point(field_mutable_list:busboy.api.Response.temporary_message)
  return &temporary_message_;
}
inline const ::busboy::api::TemporaryMessage& Response::temporary_message(int index) const {
  // @@protoc_insertion_point(field_get:busboy.api.Response.temporary_message)
  return temporary_message_.Get(index);
}
inline ::busboy::api::TemporaryMessage* Response::add_temporary_message() {
  // @@protoc_insertion_point(field_add:busboy.api.Response.temporary_message)
  return temporary_message_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::busboy::api::TemporaryMessage >&
Response::temporary_message() const {
  // @@protoc_insertion_point(field_list:busboy.api.Response.temporary_message)
  return temporary_message_;
}

// repeated .busboy.api.TemporaryStyle temporary_style = 5;
inline int Response::temporary_style_size() const {
  return temporary_style_.size();
}
inline void Response::clear_temporary_style() {
  temporary_style_.Clear();
}
inline ::busboy::api::TemporaryStyle* Response::mutable_temporary_style(int index) {
  // @@protoc_insertion_point(field_mutable:busboy.api.Response.temporary_style)
  return temporary_style_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::busboy::api::TemporaryStyle >*
Response::mutable_temporary_style() {
  // @@protoc_insertion_point(field_mutable_list:busboy.api.Response.temporary_style)
  return &temporary_style_;
}
inline const ::busboy::api::TemporaryStyle& Response::temporary_style(int index) const {
  // @@protoc_insertion_point(field_get:busboy.api.Response.temporary_style)
  return temporary_style_.Get(index);
}
inline ::busboy::api::TemporaryStyle* Response::add_temporary_style() {
  // @@protoc_insertion_point(field_add:busboy.api.Response.temporary_style)
  return temporary_style_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::busboy::api::TemporaryStyle >&
Response::temporary_style() const {
  // @@protoc_insertion_point(field_list:busboy.api.Response.temporary_style)
  return temporary_style_;
}

// -------------------------------------------------------------------

// DisplayedTime

// optional uint64 ms_since_epoch = 1;
inline bool DisplayedTime::has_ms_since_epoch() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisplayedTime::set_has_ms_since_epoch() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DisplayedTime::clear_has_ms_since_epoch() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DisplayedTime::clear_ms_since_epoch() {
  ms_since_epoch_ = GOOGLE_ULONGLONG(0);
  clear_has_ms_since_epoch();
}
inline ::google::protobuf::uint64 DisplayedTime::ms_since_epoch() const {
  // @@protoc_insertion_point(field_get:busboy.api.DisplayedTime.ms_since_epoch)
  return ms_since_epoch_;
}
inline void DisplayedTime::set_ms_since_epoch(::google::protobuf::uint64 value) {
  set_has_ms_since_epoch();
  ms_since_epoch_ = value;
  // @@protoc_insertion_point(field_set:busboy.api.DisplayedTime.ms_since_epoch)
}

// optional bool daylight_savings_time = 2;
inline bool DisplayedTime::has_daylight_savings_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DisplayedTime::set_has_daylight_savings_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DisplayedTime::clear_has_daylight_savings_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DisplayedTime::clear_daylight_savings_time() {
  daylight_savings_time_ = false;
  clear_has_daylight_savings_time();
}
inline bool DisplayedTime::daylight_savings_time() const {
  // @@protoc_insertion_point(field_get:busboy.api.DisplayedTime.daylight_savings_time)
  return daylight_savings_time_;
}
inline void DisplayedTime::set_daylight_savings_time(bool value) {
  set_has_daylight_savings_time();
  daylight_savings_time_ = value;
  // @@protoc_insertion_point(field_set:busboy.api.DisplayedTime.daylight_savings_time)
}

// -------------------------------------------------------------------

// Arrival

// optional uint32 route_index = 1;
inline bool Arrival::has_route_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Arrival::set_has_route_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Arrival::clear_has_route_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Arrival::clear_route_index() {
  route_index_ = 0u;
  clear_has_route_index();
}
inline ::google::protobuf::uint32 Arrival::route_index() const {
  // @@protoc_insertion_point(field_get:busboy.api.Arrival.route_index)
  return route_index_;
}
inline void Arrival::set_route_index(::google::protobuf::uint32 value) {
  set_has_route_index();
  route_index_ = value;
  // @@protoc_insertion_point(field_set:busboy.api.Arrival.route_index)
}

// optional uint32 ms_to_arrival = 2;
inline bool Arrival::has_ms_to_arrival() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Arrival::set_has_ms_to_arrival() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Arrival::clear_has_ms_to_arrival() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Arrival::clear_ms_to_arrival() {
  ms_to_arrival_ = 0u;
  clear_has_ms_to_arrival();
}
inline ::google::protobuf::uint32 Arrival::ms_to_arrival() const {
  // @@protoc_insertion_point(field_get:busboy.api.Arrival.ms_to_arrival)
  return ms_to_arrival_;
}
inline void Arrival::set_ms_to_arrival(::google::protobuf::uint32 value) {
  set_has_ms_to_arrival();
  ms_to_arrival_ = value;
  // @@protoc_insertion_point(field_set:busboy.api.Arrival.ms_to_arrival)
}

// optional bool predicted = 3;
inline bool Arrival::has_predicted() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Arrival::set_has_predicted() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Arrival::clear_has_predicted() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Arrival::clear_predicted() {
  predicted_ = false;
  clear_has_predicted();
}
inline bool Arrival::predicted() const {
  // @@protoc_insertion_point(field_get:busboy.api.Arrival.predicted)
  return predicted_;
}
inline void Arrival::set_predicted(bool value) {
  set_has_predicted();
  predicted_ = value;
  // @@protoc_insertion_point(field_set:busboy.api.Arrival.predicted)
}

// -------------------------------------------------------------------

// Route

// optional string short_name = 1;
inline bool Route::has_short_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Route::set_has_short_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Route::clear_has_short_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Route::clear_short_name() {
  short_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_short_name();
}
inline const ::std::string& Route::short_name() const {
  // @@protoc_insertion_point(field_get:busboy.api.Route.short_name)
  return short_name_.GetNoArena();
}
inline void Route::set_short_name(const ::std::string& value) {
  set_has_short_name();
  short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:busboy.api.Route.short_name)
}
#if LANG_CXX11
inline void Route::set_short_name(::std::string&& value) {
  set_has_short_name();
  short_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:busboy.api.Route.short_name)
}
#endif
inline void Route::set_short_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_short_name();
  short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:busboy.api.Route.short_name)
}
inline void Route::set_short_name(const char* value, size_t size) {
  set_has_short_name();
  short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:busboy.api.Route.short_name)
}
inline ::std::string* Route::mutable_short_name() {
  set_has_short_name();
  // @@protoc_insertion_point(field_mutable:busboy.api.Route.short_name)
  return short_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Route::release_short_name() {
  // @@protoc_insertion_point(field_release:busboy.api.Route.short_name)
  if (!has_short_name()) {
    return NULL;
  }
  clear_has_short_name();
  return short_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Route::set_allocated_short_name(::std::string* short_name) {
  if (short_name != NULL) {
    set_has_short_name();
  } else {
    clear_has_short_name();
  }
  short_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), short_name);
  // @@protoc_insertion_point(field_set_allocated:busboy.api.Route.short_name)
}

// optional string headsign = 2;
inline bool Route::has_headsign() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Route::set_has_headsign() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Route::clear_has_headsign() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Route::clear_headsign() {
  headsign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_headsign();
}
inline const ::std::string& Route::headsign() const {
  // @@protoc_insertion_point(field_get:busboy.api.Route.headsign)
  return headsign_.GetNoArena();
}
inline void Route::set_headsign(const ::std::string& value) {
  set_has_headsign();
  headsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:busboy.api.Route.headsign)
}
#if LANG_CXX11
inline void Route::set_headsign(::std::string&& value) {
  set_has_headsign();
  headsign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:busboy.api.Route.headsign)
}
#endif
inline void Route::set_headsign(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_headsign();
  headsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:busboy.api.Route.headsign)
}
inline void Route::set_headsign(const char* value, size_t size) {
  set_has_headsign();
  headsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:busboy.api.Route.headsign)
}
inline ::std::string* Route::mutable_headsign() {
  set_has_headsign();
  // @@protoc_insertion_point(field_mutable:busboy.api.Route.headsign)
  return headsign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Route::release_headsign() {
  // @@protoc_insertion_point(field_release:busboy.api.Route.headsign)
  if (!has_headsign()) {
    return NULL;
  }
  clear_has_headsign();
  return headsign_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Route::set_allocated_headsign(::std::string* headsign) {
  if (headsign != NULL) {
    set_has_headsign();
  } else {
    clear_has_headsign();
  }
  headsign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headsign);
  // @@protoc_insertion_point(field_set_allocated:busboy.api.Route.headsign)
}

// -------------------------------------------------------------------

// TemporaryMessage

// optional .busboy.api.TimeFrame time_frame = 1;
inline bool TemporaryMessage::has_time_frame() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TemporaryMessage::set_has_time_frame() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TemporaryMessage::clear_has_time_frame() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TemporaryMessage::clear_time_frame() {
  if (time_frame_ != NULL) time_frame_->Clear();
  clear_has_time_frame();
}
inline const ::busboy::api::TimeFrame& TemporaryMessage::_internal_time_frame() const {
  return *time_frame_;
}
inline const ::busboy::api::TimeFrame& TemporaryMessage::time_frame() const {
  const ::busboy::api::TimeFrame* p = time_frame_;
  // @@protoc_insertion_point(field_get:busboy.api.TemporaryMessage.time_frame)
  return p != NULL ? *p : *reinterpret_cast<const ::busboy::api::TimeFrame*>(
      &::busboy::api::_TimeFrame_default_instance_);
}
inline ::busboy::api::TimeFrame* TemporaryMessage::release_time_frame() {
  // @@protoc_insertion_point(field_release:busboy.api.TemporaryMessage.time_frame)
  clear_has_time_frame();
  ::busboy::api::TimeFrame* temp = time_frame_;
  time_frame_ = NULL;
  return temp;
}
inline ::busboy::api::TimeFrame* TemporaryMessage::mutable_time_frame() {
  set_has_time_frame();
  if (time_frame_ == NULL) {
    auto* p = CreateMaybeMessage<::busboy::api::TimeFrame>(GetArenaNoVirtual());
    time_frame_ = p;
  }
  // @@protoc_insertion_point(field_mutable:busboy.api.TemporaryMessage.time_frame)
  return time_frame_;
}
inline void TemporaryMessage::set_allocated_time_frame(::busboy::api::TimeFrame* time_frame) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete time_frame_;
  }
  if (time_frame) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time_frame = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time_frame, submessage_arena);
    }
    set_has_time_frame();
  } else {
    clear_has_time_frame();
  }
  time_frame_ = time_frame;
  // @@protoc_insertion_point(field_set_allocated:busboy.api.TemporaryMessage.time_frame)
}

// repeated string message = 2;
inline int TemporaryMessage::message_size() const {
  return message_.size();
}
inline void TemporaryMessage::clear_message() {
  message_.Clear();
}
inline const ::std::string& TemporaryMessage::message(int index) const {
  // @@protoc_insertion_point(field_get:busboy.api.TemporaryMessage.message)
  return message_.Get(index);
}
inline ::std::string* TemporaryMessage::mutable_message(int index) {
  // @@protoc_insertion_point(field_mutable:busboy.api.TemporaryMessage.message)
  return message_.Mutable(index);
}
inline void TemporaryMessage::set_message(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:busboy.api.TemporaryMessage.message)
  message_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void TemporaryMessage::set_message(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:busboy.api.TemporaryMessage.message)
  message_.Mutable(index)->assign(std::move(value));
}
#endif
inline void TemporaryMessage::set_message(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  message_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:busboy.api.TemporaryMessage.message)
}
inline void TemporaryMessage::set_message(int index, const char* value, size_t size) {
  message_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:busboy.api.TemporaryMessage.message)
}
inline ::std::string* TemporaryMessage::add_message() {
  // @@protoc_insertion_point(field_add_mutable:busboy.api.TemporaryMessage.message)
  return message_.Add();
}
inline void TemporaryMessage::add_message(const ::std::string& value) {
  message_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:busboy.api.TemporaryMessage.message)
}
#if LANG_CXX11
inline void TemporaryMessage::add_message(::std::string&& value) {
  message_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:busboy.api.TemporaryMessage.message)
}
#endif
inline void TemporaryMessage::add_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  message_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:busboy.api.TemporaryMessage.message)
}
inline void TemporaryMessage::add_message(const char* value, size_t size) {
  message_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:busboy.api.TemporaryMessage.message)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TemporaryMessage::message() const {
  // @@protoc_insertion_point(field_list:busboy.api.TemporaryMessage.message)
  return message_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TemporaryMessage::mutable_message() {
  // @@protoc_insertion_point(field_mutable_list:busboy.api.TemporaryMessage.message)
  return &message_;
}

// optional .busboy.api.ColorScheme color_scheme_override = 3;
inline bool TemporaryMessage::has_color_scheme_override() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TemporaryMessage::set_has_color_scheme_override() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TemporaryMessage::clear_has_color_scheme_override() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TemporaryMessage::clear_color_scheme_override() {
  color_scheme_override_ = 0;
  clear_has_color_scheme_override();
}
inline ::busboy::api::ColorScheme TemporaryMessage::color_scheme_override() const {
  // @@protoc_insertion_point(field_get:busboy.api.TemporaryMessage.color_scheme_override)
  return static_cast< ::busboy::api::ColorScheme >(color_scheme_override_);
}
inline void TemporaryMessage::set_color_scheme_override(::busboy::api::ColorScheme value) {
  assert(::busboy::api::ColorScheme_IsValid(value));
  set_has_color_scheme_override();
  color_scheme_override_ = value;
  // @@protoc_insertion_point(field_set:busboy.api.TemporaryMessage.color_scheme_override)
}

// -------------------------------------------------------------------

// TemporaryStyle

// optional .busboy.api.TimeFrame time_frame = 1;
inline bool TemporaryStyle::has_time_frame() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TemporaryStyle::set_has_time_frame() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TemporaryStyle::clear_has_time_frame() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TemporaryStyle::clear_time_frame() {
  if (time_frame_ != NULL) time_frame_->Clear();
  clear_has_time_frame();
}
inline const ::busboy::api::TimeFrame& TemporaryStyle::_internal_time_frame() const {
  return *time_frame_;
}
inline const ::busboy::api::TimeFrame& TemporaryStyle::time_frame() const {
  const ::busboy::api::TimeFrame* p = time_frame_;
  // @@protoc_insertion_point(field_get:busboy.api.TemporaryStyle.time_frame)
  return p != NULL ? *p : *reinterpret_cast<const ::busboy::api::TimeFrame*>(
      &::busboy::api::_TimeFrame_default_instance_);
}
inline ::busboy::api::TimeFrame* TemporaryStyle::release_time_frame() {
  // @@protoc_insertion_point(field_release:busboy.api.TemporaryStyle.time_frame)
  clear_has_time_frame();
  ::busboy::api::TimeFrame* temp = time_frame_;
  time_frame_ = NULL;
  return temp;
}
inline ::busboy::api::TimeFrame* TemporaryStyle::mutable_time_frame() {
  set_has_time_frame();
  if (time_frame_ == NULL) {
    auto* p = CreateMaybeMessage<::busboy::api::TimeFrame>(GetArenaNoVirtual());
    time_frame_ = p;
  }
  // @@protoc_insertion_point(field_mutable:busboy.api.TemporaryStyle.time_frame)
  return time_frame_;
}
inline void TemporaryStyle::set_allocated_time_frame(::busboy::api::TimeFrame* time_frame) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete time_frame_;
  }
  if (time_frame) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time_frame = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time_frame, submessage_arena);
    }
    set_has_time_frame();
  } else {
    clear_has_time_frame();
  }
  time_frame_ = time_frame;
  // @@protoc_insertion_point(field_set_allocated:busboy.api.TemporaryStyle.time_frame)
}

// optional .busboy.api.ColorScheme color_scheme_override = 2;
inline bool TemporaryStyle::has_color_scheme_override() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TemporaryStyle::set_has_color_scheme_override() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TemporaryStyle::clear_has_color_scheme_override() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TemporaryStyle::clear_color_scheme_override() {
  color_scheme_override_ = 0;
  clear_has_color_scheme_override();
}
inline ::busboy::api::ColorScheme TemporaryStyle::color_scheme_override() const {
  // @@protoc_insertion_point(field_get:busboy.api.TemporaryStyle.color_scheme_override)
  return static_cast< ::busboy::api::ColorScheme >(color_scheme_override_);
}
inline void TemporaryStyle::set_color_scheme_override(::busboy::api::ColorScheme value) {
  assert(::busboy::api::ColorScheme_IsValid(value));
  set_has_color_scheme_override();
  color_scheme_override_ = value;
  // @@protoc_insertion_point(field_set:busboy.api.TemporaryStyle.color_scheme_override)
}

// -------------------------------------------------------------------

// TimeFrame

// optional uint64 start_time_ms_since_epoch = 1;
inline bool TimeFrame::has_start_time_ms_since_epoch() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TimeFrame::set_has_start_time_ms_since_epoch() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TimeFrame::clear_has_start_time_ms_since_epoch() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TimeFrame::clear_start_time_ms_since_epoch() {
  start_time_ms_since_epoch_ = GOOGLE_ULONGLONG(0);
  clear_has_start_time_ms_since_epoch();
}
inline ::google::protobuf::uint64 TimeFrame::start_time_ms_since_epoch() const {
  // @@protoc_insertion_point(field_get:busboy.api.TimeFrame.start_time_ms_since_epoch)
  return start_time_ms_since_epoch_;
}
inline void TimeFrame::set_start_time_ms_since_epoch(::google::protobuf::uint64 value) {
  set_has_start_time_ms_since_epoch();
  start_time_ms_since_epoch_ = value;
  // @@protoc_insertion_point(field_set:busboy.api.TimeFrame.start_time_ms_since_epoch)
}

// optional uint64 end_time_ms_since_epoch = 2;
inline bool TimeFrame::has_end_time_ms_since_epoch() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TimeFrame::set_has_end_time_ms_since_epoch() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TimeFrame::clear_has_end_time_ms_since_epoch() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TimeFrame::clear_end_time_ms_since_epoch() {
  end_time_ms_since_epoch_ = GOOGLE_ULONGLONG(0);
  clear_has_end_time_ms_since_epoch();
}
inline ::google::protobuf::uint64 TimeFrame::end_time_ms_since_epoch() const {
  // @@protoc_insertion_point(field_get:busboy.api.TimeFrame.end_time_ms_since_epoch)
  return end_time_ms_since_epoch_;
}
inline void TimeFrame::set_end_time_ms_since_epoch(::google::protobuf::uint64 value) {
  set_has_end_time_ms_since_epoch();
  end_time_ms_since_epoch_ = value;
  // @@protoc_insertion_point(field_set:busboy.api.TimeFrame.end_time_ms_since_epoch)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace busboy

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::busboy::api::ColorScheme> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::busboy::api::ColorScheme>() {
  return ::busboy::api::ColorScheme_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_bus_2dboy_2eproto
